package sequencesimport atomicTest.trace// 시퀀스 연산에는 중간 연산과 최종 연산, 두 가지가 있다.// 중간 연산 -> 결과로 다른 시퀀스를 리턴한다. filter(), map()은 중간 연산이다.// 최종 연산 -> 시퀀스가 아닌 값을 리턴한다. 결과값을 얻기 위해 최종 연산은 저장된 모든 계산을 수행한다. any()는 최종 연산이다.fun main() {    val list = listOf(1, 2, 3, 4)    trace(        list.asSequence()            .filter(Int::isEven)            .map(Int::square)            .toList()    )    trace eq """    1.isEven()    2.isEven()    2.square()    3.isEven()    4.isEven()    4.square()    [4, 16]  """}